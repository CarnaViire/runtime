# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - release/*.*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

schedules:
  - cron: "0 8,20 * * *" # run at 8:00 and 20:00 (UTC) which is 00:00 and 12:00 (PST).
    displayName: Runtime default schedule
    branches:
      include:
      - main
    always: false # run only if there were changes since the last successful scheduled run.

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    exclude:
    - '**.md'
    - eng/Version.Details.xml
    - .devcontainer/*
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

extends:
  template:  /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:
      #
      # Evaluate paths
      #
      - ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
        - template: /eng/pipelines/common/evaluate-default-paths.yml

      #
      # Build CoreCLR checked
      # Only when CoreCLR is changed
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
          buildConfig: checked
          platforms:
          - linux_musl_arm
          jobParameters:
            testGroup: innerloop

      #
      # Build the whole product using GNU compiler toolchain
      # When CoreCLR, Mono, Libraries, Installer and src/tests are changed
      # <redacted - to be reverted>

      #
      # Build CoreCLR release
      # Always as they are needed by Installer and we always build and test the Installer.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
          buildConfig: release
          platforms:
          - linux_musl_arm
          jobParameters:
            testGroup: innerloop

      #
      # Build CoreCLR Formatting Job
      # Only when CoreCLR is changed, and only in the 'main' branch (no release branches;
      # both Rolling and PR builds).
      # <redacted - to be reverted>

      #
      # Build libraries using live CoreLib
      # These set of libraries are built always no matter what changed
      # The reason for that is because Corelib and Installer needs it and
      # These are part of the test matrix for Libraries changes.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/libraries/build-job.yml
          buildConfig: Release
          platforms:
          - linux_musl_arm

      #
      # Libraries debug build that only runs when coreclr is changed
      # Only do this on PR builds since we use the Release builds for these test runs in CI
      # and those are already built above
      # <redacted - to be reverted>

      #
      # Installer Build and Test
      # These are always built since they only take like 15 minutes
      # we expect these to be done before we finish libraries or coreclr testing.
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/installer/jobs/build-job.yml
          buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
          platforms:
            - linux_musl_arm
          jobParameters:
            liveRuntimeBuildConfig: release
            liveLibrariesBuildConfig: Release
            runOnlyIfDependenciesSucceeded: true

      #
      # CoreCLR Test builds using live libraries release build
      # Only when CoreCLR is changed
      # <redacted - to be reverted>

      #
      # Release Libraries Test Execution against a checked runtime
      # Only if CoreCLR or Libraries is changed
      #
      - template: /eng/pipelines/common/platform-matrix.yml
        parameters:
          jobTemplate: /eng/pipelines/libraries/run-test-job.yml
          buildConfig: Release
          platforms:
          - linux_musl_arm
          helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
          helixQueueGroup: libraries
          jobParameters:
            testScope: innerloop
            liveRuntimeBuildConfig: checked

      # <redacted - to be reverted>
